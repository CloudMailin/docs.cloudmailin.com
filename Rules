compile '/guide/' do
  filter :haml
end

compile '*' do
  if item.binary?
    "#{item.identifier.chop}.#{item[:extension]}"
  else
    ext = item[:extension].nil? ? nil : item[:extension].split('.').last
    case ext
    when 'markdown', 'md'
      filter :erb unless item.attributes[:skip_erb]
      filter :common_marker
      # filter :colorize_syntax, default_colorizer: :rouge
      layout 'application'
    when 'scss'
      filter :sprockets, css_compressor: :scss
    when 'coffee'
      filter :coffeescript
    when 'haml'
      filter :haml, :format => :html5
      layout 'application'
    when 'xml'
      filter :erb
    when 'js', 'txt', 'json', 'css'
      item.identifier.chop + '.' + item[:extension]
    else
      raise "Unknown filetype #{item[:extension]}"
    end
  end
end

route '*' do
  raise "Item without extension #{item.inspect}" if item[:extension].nil?
  if item.binary?
    "#{item.identifier.chop}.#{item[:extension]}"
  else
    ext = item[:extension].nil? ? nil : item[:extension].split('.').last
    case ext
    when 'scss'
      item.identifier.chop + '.css'
    when 'coffee'
      item.identifier.chop + '.js'
    when 'js', 'txt', 'json', 'css', 'xml'
      item.identifier.chop + '.' + item[:extension]
    else
      item.identifier + 'index.html'
    end
  end
end

layout '/application/', :haml, format: :html5, encoding: 'utf-8', language: 'en'
layout '/sidebar/', :haml, encoding: 'utf-8'
layout '*', :erb
